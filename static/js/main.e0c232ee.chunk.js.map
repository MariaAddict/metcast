{"version":3,"sources":["components/Header/Header.tsx","components/Footer/Footer.tsx","components/Card/Card.tsx","components/CardList/CardList.tsx","images/Academy-Weather-bg160.svg","components/SearchForecast/SearchForecast.tsx","components/Main/Main.tsx","utils/WeatherApi.ts","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","Footer","Card","props","style","backgroundImage","card","icon","backgroundSize","forecast","date","temperature","CardList","type","cards","map","i","slice","image","SearchForecast","useState","city","setCity","setDate","form","React","createRef","useEffect","console","log","getWeatherForecastOnSevenDays","ref","name","required","onChange","event","target","value","hidden","disabled","selected","placeholder","Main","handleResponse","res","ok","json","Promise","reject","status","apiWeather","url","headers","_url","_headers","this","coordinates","fetch","method","then","App","cordinatesCity","cordinates","lat","lon","getCoordinates","data","catch","err","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0c232ee.chunk.js","sourcesContent":["import './Header.css';\r\n\r\nfunction Header() {\r\n  return (\r\n      <header className=\"header\">\r\n        <h1 className=\"header__title\">Weather<br/><span className=\"header__title-part\">forecast</span></h1>\r\n      </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import './Footer.css';\r\n\r\nfunction Footer() {\r\n  return (\r\n      <footer className=\"footer\">\r\n        <p className=\"footer__discription\">C Любовью от Mercury Development</p>\r\n      </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import './Card.css';\r\n\r\ninterface CardProps {\r\n    key: number,\r\n    card: {\r\n        date: string,\r\n        temperature: number,\r\n        icon: any,\r\n    },\r\n    forecast: string,\r\n}\r\n\r\nfunction Card(props: CardProps) {\r\n    return (\r\n        <li className=\"cards__item\" style={ {backgroundImage: `url(${props.card.icon})`, backgroundSize: props.forecast === '7days' ? '120px 120px' : '160px 160px'}}>\r\n            <p className=\"cards__date\">{props.card.date}</p>\r\n            <p className=\"cards__temperature\">{props.card.temperature}</p>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Card;","import './CardList.css';\r\nimport Card from '../Card/Card';\r\nimport {Cards} from '../../types';\r\n\r\ninterface CardListProps {\r\n    cards: Cards,\r\n    forecast: string,\r\n}\r\n\r\nfunction CardList(props: CardListProps) {\r\n    return (\r\n        <div className=\"card-list-block\">\r\n            {props.forecast === '7days' && (<button type=\"button\" className=\"card-list-block__button card-list-block__button_direction_left\"></button>)}\r\n            <ul className=\"cards\">\r\n                {props.cards.map((card, i) => <Card key={i} card={card} forecast={props.forecast} />).slice(0, 3)}\r\n            </ul>\r\n            {props.forecast === '7days' && (<button type=\"button\" className=\"card-list-block__button card-list-block__button_direction_right\"></button>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","export default __webpack_public_path__ + \"static/media/Academy-Weather-bg160.1a743710.svg\";","import './SearchForecast.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport InfoBlock from '../InfoBlock/InfoBlock';\r\nimport CardList from '../CardList/CardList';\r\nimport image from '../../images/Academy-Weather-bg160.svg';\r\nimport {Cards} from '../../types';\r\n\r\n// type CardListProps = Array<{\r\n//     date: string,\r\n//     temperature: number,\r\n//     icon: any,\r\n// }>\r\n\r\n\r\nconst cards: Cards = [{\r\n    date: '2021-05-27',\r\n    temperature: 23,\r\n    icon: image,\r\n},\r\n{\r\n    date: '2021-05-28',\r\n    temperature: 27,\r\n    icon: image,\r\n}, {\r\n    date: '2021-05-29',\r\n    temperature: 5,\r\n    icon: image,\r\n}, {\r\n    date: '2021-05-30',\r\n    temperature: 18,\r\n    icon: image,\r\n}, {\r\n    date: '2021-05-31',\r\n    temperature: 10,\r\n    icon: image,\r\n}];\r\n\r\ninterface SearchForecastProps {\r\n    forecast: string,\r\n    getWeatherForecastOnSevenDays?(city: string): any,\r\n}\r\n\r\nfunction SearchForecast(this: any, props: SearchForecastProps) {\r\n\r\n    const [city, setCity] = useState<string>('');\r\n    const [date, setDate] = useState<string>('');\r\n    const form = React.createRef<HTMLFormElement>();\r\n\r\n    function handleChangeSelect(event: React.ChangeEvent<HTMLSelectElement>): void {\r\n        setCity(event.target.value);\r\n        console.log(event.target.value);\r\n    }\r\n\r\n    function handleChangeDate(event: React.ChangeEvent<HTMLInputElement>): void {\r\n        setDate(event.target.value);\r\n        console.log(event.target.value);\r\n    }\r\n\r\n    useEffect(():void => {\r\n        if (city !== '' && date !== '' && form !== null) {\r\n            // e.preventDefault();\r\n            // form.current!.submit();\r\n            //ф-ция вызывающая api\r\n            console.log(city, date);\r\n        } else  if (props.forecast === '7days' && city !== '') {\r\n            // e.preventDefault();\r\n            // form.current!.submit();\r\n            props.getWeatherForecastOnSevenDays!(city);\r\n            \r\n        }\r\n    }, [city, date, form, props.forecast, props.getWeatherForecastOnSevenDays]);\r\n\r\n    // const onFocus = () => {\r\n    //     this.type=\"date\";\r\n    // }\r\n\r\n    return (\r\n        <div className=\"forecast\">\r\n            <h3 className=\"forecast__title\">{props.forecast === '7days' ? '7 Days Forecast' : 'Forecast for a Date in the Past'}</h3>\r\n            <form ref={form} className=\"forecast__form\" name={props.forecast}>\r\n                <select className=\"forecast__input\" required onChange={handleChangeSelect}>\r\n                    <option hidden disabled selected>Select city</option>\r\n                    <option className=\"forecast__select-item\">Самара</option>\r\n                    <option className=\"forecast__select-item\">Тольятти</option>\r\n                    <option className=\"forecast__select-item\">Саратов</option>\r\n                    <option className=\"forecast__select-item\">Казань</option>\r\n                    <option className=\"forecast__select-item\">Краснодар</option>\r\n                </select>\r\n                {props.forecast === 'day' && \r\n                (\r\n                    <input type=\"date\" className=\"forecast__input forecast__input_type_data\" placeholder='Select date' required onChange={handleChangeDate}></input>\r\n                )}\r\n            </form>\r\n            {/* <InfoBlock /> */}\r\n            <CardList cards={cards} forecast={props.forecast} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchForecast;","import './Main.css';\r\nimport SearchForecast from '../SearchForecast/SearchForecast';\r\nimport {Cards} from '../../types';\r\n\r\ntype MainProps = {\r\n    getWeatherForecastOnSevenDays(city: string): Cards,\r\n}\r\n\r\nfunction Main({getWeatherForecastOnSevenDays}: MainProps) {\r\n    return (\r\n        <main className=\"main\">\r\n            <SearchForecast forecast='7days' getWeatherForecastOnSevenDays={getWeatherForecastOnSevenDays} />\r\n            <SearchForecast forecast='day' />\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","import { Coordinates } from '../types';\r\n\r\nconst apiKey: string = \"4a12c294eb4c1a76d3ce99b78c9b8b4a\";\r\nconst BASE_URL: string = \"https://api.openweathermap.org/data/2.5/onecall\";\r\n\r\ntype Headers = {\r\n    headers: {\r\n        'Content-Type': string,\r\n    }\r\n}\r\n\r\nconst handleResponse = (res: any) => {\r\n    if (res.ok) {\r\n        return res.json();\r\n    }\r\n    return Promise.reject(res.status);\r\n}\r\n\r\nclass WeatherApi {\r\n    _url: string;\r\n    _headers: {\r\n        'Content-Type': string,\r\n    };\r\n\r\n    constructor(url: string, { headers }: Headers) {\r\n        this._url = url;\r\n        this._headers = headers;\r\n    }\r\n\r\n    getWeatherForecastOnSevenDays(coordinates: Coordinates) {\r\n        return fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=33.44&lon=-94.04&exclude=minutely,hourly,daily,alerts&appid=${apiKey}`, {\r\n            method: 'GET',\r\n            headers: this._headers\r\n        })\r\n            .then(handleResponse)\r\n    }\r\n}\r\n\r\nconst apiWeather = new WeatherApi(BASE_URL, {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    }\r\n});\r\n\r\nexport default apiWeather;\r\n\r\n//${this._url}?lat=${coordinates.lat}&lon=${coordinates.lon}&units=metric&exclude=minutely,hourly,daily,alerts&appid=${apiKey}","import React from 'react';\nimport './App.css';\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\nimport Main from '../Main/Main';\nimport apiWeather from '../../utils/WeatherApi';\nimport { Cards, Coordinates } from '../../types';\n\nfunction App() {\n\n  const getCoordinates = (city: string):Coordinates => {\n    let cordinates: Coordinates;\n\n    switch (city) {\n      case 'Самара': cordinates = {\n        lat: 53.195873,\n        lon: 50.100193,\n      }\n      break;\n      case 'Тольятти': cordinates = {\n        lat: 53.507836,\n        lon: 49.420393,\n      }\n      break;\n      case 'Саратов': cordinates = {\n        lat: 51.533557,\n        lon: 46.034257,\n      }\n      break;\n      case 'Казань': cordinates = {\n        lat: 55.796127,\n        lon: 49.106405,\n      }\n      break;\n      case 'Краснодар': cordinates = {\n        lat: 45.035470,\n        lon: 38.975313,\n      }\n      break;\n      default: console.log(\"Нет такого города\");\n    }\n\n    return cordinates!;\n  }\n\n  const getWeatherForecastOnSevenDays = (city: string): any => {\n    console.log('city in big App:' ,city);\n    \n    const cordinatesCity:Coordinates = getCoordinates(city);\n\n    apiWeather.getWeatherForecastOnSevenDays(cordinatesCity).then((data:any) => {\n      console.log('data', data);\n    }).catch((err: any) => {\n      console.log(err);\n    });\n  }\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <Main getWeatherForecastOnSevenDays={getWeatherForecastOnSevenDays} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}